#Задание 1
#Создайте родительский класс Animal, у которого есть 3 атрибута:
#color - цвет
#name - кличка
#age - возраст
#и абстрактный метод:
#say - издать звук.
#Создайте два класса потомка - Cat и Dog, в которых будет переопределен метод say: для класса Cat - Meow!, для Dog - Woof!

#Задание 2
#Создайте базовый класса Father, у которого есть два атрибута: name (имя) и surname (фамилия); и дочерний класс Child, у которого будут унаследованы те же атрибуты и дополнительно атрибут patronim (отчество). Создайте один экземпляр класса Child.

#Задание 3
#А) Реализовать класс Stationery (канцелярия):

#определить в нём атрибут title (название) и абстрактный метод draw (отрисовка);
#создать три дочерних класса Pen (ручка), Pencil (карандаш), Handle (маркер);
#в классу Pen добавьте атрибут color = 'blue';
#в каждом классе реализовать переопределение метода draw. Для каждого класса метод должен выводить уникальное сообщение, например: "Ручка пишет";
#создать экземпляры классов и проверить, что выведет описанный метод для каждого экземпляра.
#Б)

#Добавьте в класс Stationary метод класса set_color, который присваивает атрибут класса Stationary color;
#Вызовете метод set_color и установите color='yellow';
#Вызовете атрибуты color у классов Pen, Pencil, Handle. Что вы наблюдаете?

#Задание 4
#Создайте базовый класс User с атрибутами login, password и методом:
#view - выводит сообщение "Я - User. Могу просматривать содержимое"
#Создайте дочерний класс Moderator, у которого так же будут атрибуты login и password и дополнительно - group_id, а так же два метода:
#view - выводит сообщение "Я - Moderator. Могу просматривать содержимое"
#redact - выводит сообщение "Я - Moderator. Могу редактировать содержимое"

#Задание 5
#Создайте класс Clock со статичным методом Say_time, который будет выводить на экран текущее время.

#Подсказка: для этого можете воспользоваться стандартной библиотекой time.

#[ ]
#from time import time, localtime

# time выводит количество секунд, прошедших с 1 января 1970, 00:00:00

#print(time()) # 1668680736.59019

# localtime преобразует секунды в кортеж struct_time

#print(localtime(time())) # time.struct_time(tm_year=2022, tm_mon=11, tm_mday=17, tm_hour=10, tm_min=26, tm_sec=8, tm_wday=3, tm_yday=321, tm_isdst=0)

# Чтобы привести его в красивый вид, можно воспользоваться f-строкой

#rez = localtime(time())
#print(f'{rez.tm_hour}:{rez.tm_min}:{rez.tm_sec}') # 10:29:45
#1668680985.4531398
#10:29:45

#Задание 6 * (необязательное)
#Давайте создадим свой класс Time по аналогии с Date_time выше. Реализуйте в нем классовый метод from_string(), который будет принимать в себя строку('00:00:00') и будет преобразовывать его в объект Time.